{"version":3,"file":"VueDataset.min.js","sources":["../../src/i18n/en.js","../../src/helpers/index.js","../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../../src/Dataset.vue","../../src/DatasetInfo.vue","../../src/DatasetItem.vue","../../src/DatasetPager.vue","../../src/DatasetSearch.vue","../../src/DatasetShow.vue"],"sourcesContent":["export default {\n  show: 'Show',\n  entries: 'entries',\n  previous: 'Previous',\n  next: 'Next',\n  showing: 'Showing',\n  showingTo: 'to',\n  showingOf: 'of',\n  showingEntries: 'entries'\n}\n","const MORE_PAGES = '...'\n\nfunction debounce(func, wait, immediate) {\n  let timeout\n\n  return function () {\n    const context = this\n    const args = arguments\n\n    clearTimeout(timeout)\n    if (immediate && !timeout) {\n      func.apply(context, args)\n    }\n    timeout = setTimeout(function () {\n      timeout = null\n      if (!immediate) {\n        func.apply(context, args)\n      }\n    }, wait)\n  }\n}\n\n// https://jsperf.com/object-empty-ch/1\nfunction isEmptyObject(obj) {\n  // eslint-disable-next-line no-unreachable-loop\n  for (const key in obj) {\n    return false\n  }\n\n  return true\n}\n\nfunction createPagingRange(nrOfPages, currentPage) {\n  const delta = 2\n  const range = []\n  const rangeWithDots = []\n  let length\n\n  range.push(1)\n\n  if (nrOfPages <= 1) {\n    return range\n  }\n\n  for (let i = currentPage - delta; i <= currentPage + delta; i++) {\n    if (i < nrOfPages && i > 1) {\n      range.push(i)\n    }\n  }\n  range.push(nrOfPages)\n\n  for (let i = 0; i < range.length; i++) {\n    if (length) {\n      if (range[i] - length === 2) {\n        rangeWithDots.push(length + 1)\n      } else if (range[i] - length !== 1) {\n        rangeWithDots.push(MORE_PAGES)\n      }\n    }\n    rangeWithDots.push(range[i])\n    length = range[i]\n  }\n\n  return rangeWithDots\n}\n\nfunction fieldSorter(fields, dsSortAs = {}) {\n  const dir = []\n  let i\n  const length = fields.length\n\n  fields = fields.map(function (o, i) {\n    if (o[0] === '-') {\n      dir[i] = -1\n      o = o.substring(1)\n    } else {\n      dir[i] = 1\n    }\n\n    return o\n  })\n\n  return function (a, b) {\n    for (i = 0; i < length; i++) {\n      const o = fields[i]\n      const aVal = dsSortAs[o] ? dsSortAs[o](a.value[o]) : a.value[o]\n      const bVal = dsSortAs[o] ? dsSortAs[o](b.value[o]) : b.value[o]\n\n      if (aVal > bVal) {\n        return dir[i]\n      }\n      if (aVal < bVal) {\n        return -dir[i]\n      }\n    }\n\n    return 0\n  }\n}\n\nfunction fieldFilter(items, filterFields) {\n  // Filter it by field\n  for (const filterKey in filterFields) {\n    // console.log(filterKey + ' -> ' + filterFields[filterKey]);\n    items = items.filter(function (item) {\n      const itemValue = item.value\n\n      for (const itemKey in itemValue) {\n        if (itemKey === filterKey) {\n          if (typeof filterFields[filterKey] === 'function') {\n            return filterFields[filterKey](itemValue[itemKey])\n          }\n          if (filterFields[filterKey] === '') {\n            return true\n          }\n          if (itemValue[itemKey] === filterFields[filterKey]) {\n            return true\n          }\n        }\n      }\n\n      return false\n    })\n  }\n\n  return items\n}\n\n// Search method that also takes into account transformations needed\nfunction findAny(dsSearchIn, dsSearchAs, rowData, str) {\n  // Convert the search string to lower case\n  str = String(str).toLowerCase()\n  for (const key in rowData) {\n    if (dsSearchIn.length === 0 || dsSearchIn.indexOf(key) !== -1) {\n      const value = String(rowData[key]).toLowerCase()\n\n      for (const field in dsSearchAs) {\n        if (field === key) {\n          // Found key in dsSearchAs so we pass the value and the search string to a search function\n          // that returns true/false and we return that if true.\n          /* Check if dsSearchAs is a function (passed from the template) */\n          if (typeof dsSearchAs[field] === 'function') {\n            const res = dsSearchAs[field](value, str, rowData)\n\n            if (res === true) {\n              return res\n            }\n          }\n        }\n      }\n      // If it doesn't return from above we perform a simple search\n      if (value.indexOf(str) >= 0) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\nexport { MORE_PAGES, debounce, isEmptyObject, createPagingRange, fieldSorter, fieldFilter, findAny }\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <div>\n    <slot\n      :ds=\"{\n        dsIndexes: indexes,\n        dsShowEntries,\n        dsResultsNumber,\n        dsPage,\n        dsPagecount,\n        dsFrom,\n        dsTo,\n        dsData,\n        dsRows,\n        dsPages,\n        search,\n        showEntries,\n        setActive\n      }\"\n    ></slot>\n  </div>\n</template>\n\n<script>\nimport datasetI18n from './i18n/en.js'\nimport { createPagingRange, fieldFilter, fieldSorter, findAny, isEmptyObject } from './helpers'\n\nexport default {\n  provide() {\n    return {\n      search: this.search,\n      showEntries: this.showEntries,\n      setActive: this.setActive,\n      datasetI18n: this.datasetI18n,\n      /* Setup reactive provides */\n      rdsIndexes: () => this.indexes,\n      rdsData: () => this.dsData,\n      rdsRows: () => this.dsRows,\n      rdsPages: () => this.dsPages,\n      rdsResultsNumber: () => this.dsResultsNumber,\n      rdsPagecount: () => this.dsPagecount,\n      rdsFrom: () => this.dsFrom,\n      rdsTo: () => this.dsTo,\n      rdsPage: () => this.dsPage\n    }\n  },\n  props: {\n    dsData: {\n      type: Array,\n      default: () => []\n    },\n    dsFilterFields: {\n      type: Object,\n      default: () => ({})\n    },\n    dsSortby: {\n      type: Array,\n      default: () => []\n    },\n    dsSearchIn: {\n      type: Array,\n      default: () => []\n    },\n    dsSearchAs: {\n      type: Object,\n      default: () => ({})\n    },\n    dsSortAs: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data: function () {\n    return {\n      dsPage: 1,\n      dsSearch: '',\n      dsShowEntries: 10,\n      datasetI18n,\n      indexes: []\n    }\n  },\n  computed: {\n    whenChanged() {\n      /* eslint-disable no-unused-expressions */\n      this.dsData\n      this.dsSearch\n      this.dsSortby\n      this.dsFilterFields\n      this.dsSearchIn\n      this.dsSearchAs\n      this.dsSortAs\n\n      return Date.now()\n    },\n    dsRows() {\n      // We should not modify another computed property from inside a computed property\n      // This should be moved into the dsTo computed if needed\n      /*\n      if (this.dsTo <= 0) {\n        this.dsTo = this.indexes.length;\n      }\n      */\n      return this.indexes.slice(this.dsFrom, this.dsTo)\n    },\n    dsPages() {\n      return createPagingRange(this.dsPagecount, this.dsPage)\n    },\n    dsResultsNumber() {\n      return this.indexes.length\n    },\n    dsPagecount() {\n      return Math.ceil(this.dsResultsNumber / this.dsShowEntries)\n    },\n    dsFrom() {\n      return (this.dsPage - 1) * this.dsShowEntries\n    },\n    dsTo() {\n      return this.dsPage * this.dsShowEntries\n    }\n  },\n  watch: {\n    dsResultsNumber: {\n      handler(val, oldVal) {\n        // Reset active page when results change\n        this.setActive(1)\n      }\n    },\n    /*\n    The naive attempt would be to manipulate the original array directly.\n    This is problematic because it has to be filtered first, then sorted, then the from/to rows extracted.\n    In order to do that in that order, we would need to work on a copy.\n    But this is problematic as well since we'd loose the data-binding to the original array.\n\n    The trick is to work directly on the array indexes.\n    */\n    whenChanged: {\n      handler(newVal, oldVal) {\n        let result = []\n        const dsData = this.dsData\n        const dsSearch = this.dsSearch\n        const dsSortby = this.dsSortby\n        const dsFilterFields = this.dsFilterFields\n        const dsSearchIn = this.dsSearchIn\n        const dsSearchAs = this.dsSearchAs\n        const dsSortAs = this.dsSortAs\n\n        if (!dsSearch && !dsSortby.length && isEmptyObject(dsFilterFields)) {\n          // Skip processing and just get the indexes\n          result = dsData.map((val, i) => i)\n        } else {\n          // Index it\n          result = dsData.map((val, i) => ({ index: i, value: val }))\n\n          // Filter it by field\n          if (!isEmptyObject(dsFilterFields)) {\n            result = fieldFilter(result, dsFilterFields)\n          }\n\n          // Search it\n          if (dsSearch) {\n            result = result.filter((entry) => findAny(dsSearchIn, dsSearchAs, entry.value, dsSearch))\n          }\n\n          // Sort it\n          if (dsSortby.length) {\n            result.sort(fieldSorter(dsSortby, dsSortAs))\n          }\n\n          // We need only the indexes\n          result = result.map((entry) => entry.index)\n        }\n        this.indexes = result\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    search(value) {\n      this.dsSearch = value\n    },\n    showEntries(value) {\n      this.dsShowEntries = value\n      this.$nextTick(() => {\n        if (this.dsPage > this.dsPagecount) {\n          this.setActive(this.dsPages[this.dsPages.length - 1])\n        }\n      })\n    },\n    setActive(value) {\n      this.dsPage = value\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n    {{ datasetI18n.showing }} {{ showing }} {{ datasetI18n.showingTo }} {{ showingTo }} {{ datasetI18n.showingOf }}\n    {{ dsResultsNumber }} {{ datasetI18n.showingEntries }}\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: ['datasetI18n', 'rdsResultsNumber', 'rdsFrom', 'rdsTo'],\n  computed: {\n    showing() {\n      return this.dsResultsNumber !== 0 ? this.dsFrom + 1 : 0\n    },\n    showingTo() {\n      return this.dsTo >= this.dsResultsNumber ? this.dsResultsNumber : this.dsTo\n    },\n    /* Setup reactive injects */\n    dsResultsNumber() {\n      return this.rdsResultsNumber()\n    },\n    dsFrom() {\n      return this.rdsFrom()\n    },\n    dsTo() {\n      return this.rdsTo()\n    }\n  }\n}\n</script>\n","<template>\n  <component :is=\"tag\">\n    <template v-for=\"(rowIndex, i) in dsRows\">\n      <slot :row=\"dsData[rowIndex]\" :row-index=\"rowIndex\" :index=\"indexes[i]\"></slot>\n    </template>\n    <slot v-if=\"!dsRows.length\" name=\"noDataFound\"></slot>\n  </component>\n</template>\n\n<script>\nexport default {\n  inject: ['rdsData', 'rdsRows', 'rdsFrom', 'rdsTo'],\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  computed: {\n    /* Setup reactive injects */\n    dsRows() {\n      return this.rdsRows()\n    },\n    dsData() {\n      return this.rdsData()\n    },\n    dsFrom() {\n      return this.rdsFrom()\n    },\n    dsTo() {\n      return this.rdsTo()\n    },\n    indexes() {\n      const arr = []\n\n      for (let i = this.dsFrom; i < this.dsTo; i++) {\n        arr.push(i)\n      }\n\n      return arr\n    }\n  }\n}\n</script>\n","<template>\n  <ul class=\"pagination\">\n    <li :class=\"['page-item', disabledPrevious && 'disabled']\">\n      <a\n        class=\"page-link\"\n        href=\"#\"\n        :tabindex=\"disabledPrevious && '-1'\"\n        :aria-disabled=\"disabledPrevious && 'true'\"\n        @click.prevent=\"setActive(dsPage !== 1 && dsPagecount !== 0 ? dsPage - 1 : dsPage)\"\n      >\n        {{ datasetI18n.previous }}\n      </a>\n    </li>\n    <template v-for=\"(item, index) in dsPages\">\n      <li :key=\"index\" :class=\"['page-item', item === dsPage && 'active', item === morePages && 'disabled']\">\n        <a v-if=\"item !== morePages\" class=\"page-link\" href=\"#\" @click.prevent=\"setActive(item)\">\n          {{ item }}\n        </a>\n        <span v-else class=\"page-link\">\n          {{ item }}\n        </span>\n      </li>\n    </template>\n    <li :class=\"['page-item', disabledNext && 'disabled']\">\n      <a\n        class=\"page-link\"\n        href=\"#\"\n        :tabindex=\"disabledNext && '-1'\"\n        :aria-disabled=\"disabledNext && 'true'\"\n        @click.prevent=\"setActive(dsPage !== dsPagecount && dsPagecount !== 0 ? dsPage + 1 : dsPage)\"\n      >\n        {{ datasetI18n.next }}\n      </a>\n    </li>\n  </ul>\n</template>\n\n<script>\nimport { MORE_PAGES } from './helpers'\n\nexport default {\n  inject: ['datasetI18n', 'setActive', 'rdsPages', 'rdsPagecount', 'rdsPage'],\n  data: function () {\n    return {\n      morePages: MORE_PAGES\n    }\n  },\n  computed: {\n    /* Setup reactive injects */\n    dsPages() {\n      return this.rdsPages()\n    },\n    dsPagecount() {\n      return this.rdsPagecount()\n    },\n    dsPage() {\n      return this.rdsPage()\n    },\n    /* Normal computeds */\n    disabledPrevious() {\n      return this.dsPage === 1\n    },\n    disabledNext() {\n      return this.dsPage === this.dsPagecount || this.dsPagecount === 0\n    }\n  }\n}\n</script>\n","<template>\n  <input\n    type=\"text\"\n    :placeholder=\"dsSearchPlaceholder\"\n    class=\"form-control\"\n    :value=\"dsSearch\"\n    @input=\"input($event.target.value)\"\n  />\n</template>\n\n<script>\nimport { debounce } from './helpers'\n\nexport default {\n  inject: ['search'],\n  props: {\n    dsSearchPlaceholder: {\n      type: String,\n      default: ''\n    },\n    wait: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function () {\n    return {\n      dsSearch: ''\n    }\n  },\n  mounted() {\n    this.input = debounce((value) => {\n      this.search(value)\n    }, this.wait)\n  }\n}\n</script>\n","<template>\n  <div class=\"form-inline\">\n    <label>{{ datasetI18n.show }}</label>\n    <select :value=\"dsShowEntries\" class=\"form-control mr-1 ml-1\" @change=\"change\">\n      <option v-for=\"option in dsShowEntriesLovs\" :key=\"option.value\" :value=\"option.value\">\n        {{ option.text }}\n      </option>\n    </select>\n    <label>{{ datasetI18n.entries }}</label>\n  </div>\n</template>\n\n<script>\nexport default {\n  inject: ['datasetI18n', 'showEntries'],\n  props: {\n    dsShowEntries: {\n      type: Number,\n      default: 10\n    },\n    dsShowEntriesLovs: {\n      type: Array,\n      default: () => [\n        { value: 5, text: 5 },\n        { value: 10, text: 10 },\n        { value: 25, text: 25 },\n        { value: 50, text: 50 },\n        { value: 100, text: 100 }\n      ]\n    }\n  },\n  created() {\n    this.showEntries(Number(this.dsShowEntries))\n  },\n  methods: {\n    change(e) {\n      this.$emit('changed', Number(e.target.value))\n      this.showEntries(Number(e.target.value))\n    }\n  }\n}\n</script>\n"],"names":["datasetI18n","show","entries","previous","next","showing","showingTo","showingOf","showingEntries","isEmptyObject","obj","const","key","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","options","hook","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","__vue_script__","provide","search","showEntries","setActive","rdsIndexes","indexes","rdsData","dsData","rdsRows","dsRows","rdsPages","dsPages","rdsResultsNumber","dsResultsNumber","rdsPagecount","dsPagecount","rdsFrom","dsFrom","rdsTo","dsTo","rdsPage","dsPage","props","type","Array","default","dsFilterFields","Object","dsSortby","dsSearchIn","dsSearchAs","dsSortAs","data","dsSearch","dsShowEntries","computed","whenChanged","Date","now","slice","nrOfPages","currentPage","length","range","rangeWithDots","push","let","i","createPagingRange","Math","ceil","watch","handler","val","oldVal","newVal","result","map","index","value","items","filterFields","loop","filterKey","filter","item","itemValue","itemKey","fieldFilter","entry","rowData","str","String","toLowerCase","indexOf","field","res","findAny","sort","fields","dir","o","substring","a","b","aVal","bVal","fieldSorter","immediate","methods","$nextTick","inject","tag","arr","morePages","disabledPrevious","disabledNext","script$1","dsSearchPlaceholder","wait","Number","mounted","func","timeout","input","args","arguments","clearTimeout","apply","setTimeout","dsShowEntriesLovs","text","created","change","e","$emit","target"],"mappings":"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"}